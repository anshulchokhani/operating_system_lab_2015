//load (page number,block number)

load (7,1);
load (8,2);
load (23,17);
load (24,18);
//loading init processes
[READY_LIST+0]=0;
load (25,21);
load (26,22);
load (27,23);
PTBR=1024;
PTLR=4;
[PTBR+0]=25;
[PTBR+1]="01";
[PTBR+2]=26;
[PTBR+3]="01";
[PTBR+4]=27;
[PTBR+5]="01";
[PTBR+6]=28;
[PTBR+7]="01";
[READY_LIST+1]=2;
SP=3*512;
[28*512]=0;

//load the interrupt 1 routine
load (11,5);
load (12,6);


//load the interrupt 7 routine
load (9,3);
load (10,4);

//load the fat 
load (5,19);

//load disk free list
load (6,20);

//modifying the system wide open call table
//file_table is pointer to swoct^

alias counter S0;			
counter = 0;
while ( counter <  128) do			// 64 entries, each of size 2 words
	[ FILE_TABLE + counter + 0] = -1;	// Set FAT Index to -1
	[ FILE_TABLE + counter + 1] =  0;	// Set File Open Count to 0
	counter = counter + 2;			// Move to next entry
endwhile;	

counter=0;
while(counter<16) do
 [READY_LIST+counter+15]=-1;
 counter=counter+1;
endwhile;

//loading interrupt 2,3,4
load(13,7);
load (14,8);
load (15,9);
load (16,10);
load (17,11);
load (18,12);

//loading interrupt 5,6,7
load (19,13);
load (20,14);
load (21,15);
load (22,16);
load (23,17);
load (24,18);

 //initializing memory free list to 0 or 1 
 //first 28 pages occupied by os  kernel and init
 //available 29 to 63


 counter=0;
 while(counter<29) do
 	[1280+counter]=1;
 	counter=counter+1;
 endwhile;

 while (counter< 64) do
     [1280+counter]=0;
     counter=counter+1;
 endwhile;

 //if error is there for init check here.

counter=READY_LIST;
while (counter< 2559) do
     [counter+1]=0;
     counter=counter+32;
endwhile;


ireturn;
